package com.dothings.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ParticipantExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public ParticipantExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andApplicationDateIsNull() {
            addCriterion("application_date is null");
            return (Criteria) this;
        }

        public Criteria andApplicationDateIsNotNull() {
            addCriterion("application_date is not null");
            return (Criteria) this;
        }

        public Criteria andApplicationDateEqualTo(Date value) {
            addCriterionForJDBCDate("application_date =", value, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("application_date <>", value, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateGreaterThan(Date value) {
            addCriterionForJDBCDate("application_date >", value, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("application_date >=", value, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateLessThan(Date value) {
            addCriterionForJDBCDate("application_date <", value, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("application_date <=", value, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateIn(List<Date> values) {
            addCriterionForJDBCDate("application_date in", values, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("application_date not in", values, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("application_date between", value1, value2, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andApplicationDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("application_date not between", value1, value2, "applicationDate");
            return (Criteria) this;
        }

        public Criteria andEventIdIsNull() {
            addCriterion("event_id is null");
            return (Criteria) this;
        }

        public Criteria andEventIdIsNotNull() {
            addCriterion("event_id is not null");
            return (Criteria) this;
        }

        public Criteria andEventIdEqualTo(Long value) {
            addCriterion("event_id =", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotEqualTo(Long value) {
            addCriterion("event_id <>", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThan(Long value) {
            addCriterion("event_id >", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThanOrEqualTo(Long value) {
            addCriterion("event_id >=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThan(Long value) {
            addCriterion("event_id <", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThanOrEqualTo(Long value) {
            addCriterion("event_id <=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdIn(List<Long> values) {
            addCriterion("event_id in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotIn(List<Long> values) {
            addCriterion("event_id not in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdBetween(Long value1, Long value2) {
            addCriterion("event_id between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotBetween(Long value1, Long value2) {
            addCriterion("event_id not between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdIsNull() {
            addCriterion("participant_team_id is null");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdIsNotNull() {
            addCriterion("participant_team_id is not null");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdEqualTo(Long value) {
            addCriterion("participant_team_id =", value, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdNotEqualTo(Long value) {
            addCriterion("participant_team_id <>", value, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdGreaterThan(Long value) {
            addCriterion("participant_team_id >", value, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdGreaterThanOrEqualTo(Long value) {
            addCriterion("participant_team_id >=", value, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdLessThan(Long value) {
            addCriterion("participant_team_id <", value, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdLessThanOrEqualTo(Long value) {
            addCriterion("participant_team_id <=", value, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdIn(List<Long> values) {
            addCriterion("participant_team_id in", values, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdNotIn(List<Long> values) {
            addCriterion("participant_team_id not in", values, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdBetween(Long value1, Long value2) {
            addCriterion("participant_team_id between", value1, value2, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantTeamIdNotBetween(Long value1, Long value2) {
            addCriterion("participant_team_id not between", value1, value2, "participantTeamId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdIsNull() {
            addCriterion("participant_user_id is null");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdIsNotNull() {
            addCriterion("participant_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdEqualTo(Long value) {
            addCriterion("participant_user_id =", value, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdNotEqualTo(Long value) {
            addCriterion("participant_user_id <>", value, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdGreaterThan(Long value) {
            addCriterion("participant_user_id >", value, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("participant_user_id >=", value, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdLessThan(Long value) {
            addCriterion("participant_user_id <", value, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdLessThanOrEqualTo(Long value) {
            addCriterion("participant_user_id <=", value, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdIn(List<Long> values) {
            addCriterion("participant_user_id in", values, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdNotIn(List<Long> values) {
            addCriterion("participant_user_id not in", values, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdBetween(Long value1, Long value2) {
            addCriterion("participant_user_id between", value1, value2, "participantUserId");
            return (Criteria) this;
        }

        public Criteria andParticipantUserIdNotBetween(Long value1, Long value2) {
            addCriterion("participant_user_id not between", value1, value2, "participantUserId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table participant
     *
     * @mbggenerated do_not_delete_during_merge Sun Dec 06 17:59:21 EET 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table participant
     *
     * @mbggenerated Sun Dec 06 17:59:21 EET 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}